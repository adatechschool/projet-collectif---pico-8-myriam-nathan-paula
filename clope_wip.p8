pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- init, update, draw

function _init()

	p={
		x=24, 
		y=24,
		sprite=1,
		flp=false,
		dx=0, dy=0,
		max_dx=2, max_dy=3,
		speed=0.5,
		w=8 , h=8,
		dir="right",
		
		boost=4,
		anim=0,
		
		running=false,
		jumping=false,
		falling=false,
		sliding=false,
		landed=false,
				--count point
		lighter=0,	
 }
 
 	gravity=0.3
 	friction=0.85
 	
 	--simple camera
 	cam_x=0
		cam_y=0
 	
 	--map limits
 	map_start=0
 	map_end=2040
		map_end_y=144
		
end


function _update()

player_update()
player_animate()
pick_up_lighter(p.x/8,p.y/8)
interact(p.x/8,p.y/8)

--simple camera
	cam_y=p.y-64+(p.w/2)
	if cam_y<map_start then
   	cam_y=map_start
	end
	if cam_y>map_end_y-128 then
   	cam_y=map_end_y-128
	end
	cam_x=p.x-64+(p.w/2)
	if cam_x<map_start then
	   cam_x=map_start
	end
	if cam_x>map_end-128 then
	   cam_x=map_end-128
	end
	camera(cam_x,cam_y)
end



function _draw()

cls(1)
map(0,0)
spr(p.sprite,p.x,p.y,1,1,p.flp)

end


function player_update()

p.dy+=gravity
p.dx*=friction

 if (btn(⬅️)) then
  p.dx-=p.speed
  p.running=true
  p.flp=true
 end
 
	
	if (btn(➡️)) then
	 p.dx+=p.speed 
	 p.running=true
	 p.flp=false
	end 

-- slide	
	if p.running
	and not btn(⬅️)
	and not btn(➡️)
	and not p.falling
	and not p.jumping then
	  p.running=false
	  p.sliding=true
	end 
	 
 if btnp(🅾️)
 and p.landed then
 p.dy-=p.boost
 p.landed=false
 end
 
 
	 
--check collision up and down
 if p.dy>0 then
 		p.falling=true
 		p.landed=false
 		p.jumping=false
 		
 		p.dy=limit_speed(p.dy,p.max_dy)  

   if collide_map(p,"down",0) then
     p.landed=true
     p.falling=false
     p.dy=0
     p.y-=((p.y+p.h+1)%8)-1
   end
   
 elseif p.dy<0 then
 		p.jumping=true
 	 if collide_map(p,"up",1) then
 		  p.dy=0 
			end
	end
		
--check collision left and right
	if p.dx<0 then

   p.dx=limit_speed(p.dx,p.max_dx)

 		if collide_map(p,"left",1) then
      p.dx=0
   end
 elseif p.dx>0 then

   p.dx=limit_speed(p.dx,p.max_dx)

   if collide_map(p,"right",1) then
      p.dx=0
   end
 end

--stop sliding
 
 if p.sliding then
   if abs(p.dx)<.2
   or p.running then
      p.dx=0
      p.sliding=false
   end
 end

 p.x+=p.dx
 p.y+=p.dy

--limit player to map
	
	if p.x<map_start then
		p.px=map_start 
	end
	if p.x>map_end-p.w then
		p.px=map_end-p.w 
	end
	if p.y<map_start then
		p.py=map_start 
	end
	if p.y>map_end_y-p.h then
		p.py=map_end_y-p.h
	end
	
end






			

-->8
-- collisions

function collide_map(obj,aim,flag)
		local x=obj.x local y=obj.y
		local w=obj.w local h=obj.h

		local x1=0 local y1=0
		local w1=0 local h1=0

		if aim=="left" then
			x1=x-1 		y1=y
			x2=x					y2=y+h-1
			
		elseif aim=="right" then
			x1=x+w			y1=y
			x2=x					y2=y+h-1
			
		elseif aim=="up" then
			x1=x+1			y1=y-1
			x2=x+w-1	y2=y
			
		elseif aim=="down" then 
			x1=x					y1=y+h
			x2=x+w			y2=y+h
			
		end
--pixels to tiles
x1/=8		y1/=8		
x2/=8		y2/=8

if fget(mget(x1,y1),flag)
or fget(mget(x2,y2),flag)
or fget(mget(x1,y2),flag)
or fget(mget(x2,y1),flag) then
		return true
else
		return false
		end
	
end
		


-->8
--limit speed
function limit_speed(num,maximum)
	return mid(-maximum,num,maximum)
end
	
-->8
--player animation
function player_animate()
	if p.jumping then
			p.sprite=7
	elseif p.falling then
			p.sprite=8
	elseif p.sliding then
			p.sprite=9

	elseif p.running then
			if time()-p.anim>.1 then
					p.anim=time()
					p.sprite+=1
					if p.sprite>6 then
							p.sprite=3 
					end
			end
			
	else
			if time()-p.	anim>.3 then
					p.anim=time()
					p.sprite+=1
					if p.sprite>2 then
							p.sprite=1 
					end
			end
	end
end
-->8
--catch lighter & gain points

function next_tile(x,y)
local sprite =mget(x,y)
mset(x,y,sprite+1)
end 

--function to pick up the lighter
function pick_up_lighter(x,y)
if collide_map(p,"left",2) then
  next_tile(x-1,y)
  p.lighter+=1
  end
if collide_map(p,"right",2) then
  next_tile(x+1,y)
  p.lighter+=1
  end
if collide_map(p,"up",2) then
  next_tile(x,y-1)
  p.lighter+=1
  end
if collide_map(p,"down",2) then
  next_tile(x,y+1)
  p.lighter+=1
   end
end


-->8
-- ouvrir porte avec briquet
function interact(x,y)
if p.lighter>3 then
		open_door(x,y)
else
  end
end

function open_door(x,y)
if collide_map(p,"left",1) then
  next_tile(x+1,y)
  p.lighter-=4
  end    
if collide_map(p,"right",1) then
  next_tile(x+1,y)
  p.lighter-=4
  end
end
__gfx__
00000000000000600000000600000006000000600000000600000060000000060000006000000006000000000000000000000000000000000000000000000000
00000000000000060000006000000060000000060000006000000006000000600000000600000060000000000000000000000000000000000000000000000000
00700700000000600000000600000006000000600000000600000060000000060000006000000006000000000000000000000000000000000000000000000000
00077000447777904477779044777790447777904477779044777790447777904477779044777790000000000000000000000000000000000000000000000000
00077000008800000088000000880000008800000088000000880000008800000088000000880000000000000000000000000000000000000000000000000000
00700700080800000808000048080000008000004808000000800000080800000080000000800000000000000000000000000000000000000000000000000000
00000000080080000800800040800000080000004008000008000000480800000008800000088000000000000000000000000000000000000000000000000000
00000000044044000440440000440000044000000004400004400000400440000000440000004400000000000000000000000000000000000000000000000000
ee118811111111111111111144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
ee188981111111111111111144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
ee18aa98111111111111111144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
ee189a81111111111111111144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
ee16666d111111111111111144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
11eeeeee11111111111aaa1144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
11eeeeee111111111aaa511144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
11eeeeee111111111aaa111144444444aaaaaaaa6666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
ee11881111111111aaaa111100000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee189881111111115aaaa11100000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee89aa8111111111aaaaa11a00000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee18a981111111111aaaaaa500000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee16666d1111111115aaaa5100000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11eeeeee11111111115a151100000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11eeeeee111111111111111100000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11eeeeee111111111111111100000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
131b13b133b3333b1111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b33b3b3343b331555555111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33b333b343444346a444444a11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33b3b33b4b5644655444444511111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b33b3b14654654554aa45511111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33b3333b141641415455554511111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b333b33111411115444444511111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b33b333111111115444444511111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000004000003030300000000000000000000000000000000000000000000000000000301030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131314141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414151515151515151515151515151515151515
1311111111111111111133111111313111111111111111111111331111111111113311111111111111111133111111313111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311113311113311331111111133111111111133111111111111111132111111111111111111113311331111111133111111111133111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111111111111113131331111113311111111113311111111113131311111113311111111331111113131331111113311111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311331111111111111111111111321111111111111111111111111111111111111111331111111111111111111111111111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311113131311133111133111131313111111111111111313111111111331111111111113131311133111133111131313111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1333111111331111313131113311111111111133111111111111111111111111111133111111331111313131113311111111111133111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111133111111111111111111331111111111111111111111113131111111111111111133111111111111111111331111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1331313131313131313131313131111111111111111133111111111111111111113131313131313131313131313131111111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111133111111111111111111111131313111111111111111111111111111111111111133111111111111111111111131313111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111111111111111111111111111111111111111111113131111111111111111111111111111111111111111111111111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111111111111111111111131311111111111111111111111111111111111111111111111111111111111111131311111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311331111111111113131111111111111113311111111111111113131111111111111331111111111113131111111111111113311111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111111313131111111111111111111111111111131311111111133111111111111111111313131111111111111111111111111111314242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242414150000000000000000000000000000000015
1311111111111111111133111111331111111111111111111111111111111111111111111111111111111133111111331111111111111124242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424000000000000000000000000000000000015
1311111111111111111111111111111111111111111111111111111111111111113311111111111111111111111111111111111111111124242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424000000000000000000000000000000000015
3030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303014141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414151515151515151515151515151515151515
__sfx__
000f00000a05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
